The ``4-print_square`` module
======================

Using ``print_square``
-------------------

Import function from module:
    >>> print_square = __import__('4-print_square').print_square

>>> print_square(1.0)
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square([1, 2, 3])
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square((1, 2, 3))
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square("Holberton")
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square(str(123))
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square(float(1))
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square(float("inf"))
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square(float("NaN"))
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square(-1)
Traceback (most recent call last):
ValueError: size must be >= 0


>>> print_square(-25)
Traceback (most recent call last):
ValueError: size must be >= 0


>>> print_square(-1.0)
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square(-32.5)
Traceback (most recent call last):
TypeError: size must be an integer


>>> print_square()
Traceback (most recent call last):
TypeError: print_square() missing 1 required positional argument: 'size'


# Test with size 0 (should print nothing)
>>> print_square(0)

# Test with size 1
>>> print_square(1)
#

# Test with size 2
>>> print_square(2)
##
##

# Test with size 3
>>> print_square(3)
###
###
###

# Test with size 4
>>> print_square(4)
####
####
####
####